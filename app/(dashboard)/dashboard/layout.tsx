import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/public/globals.css";
import { TRPCProvider } from "@/trpc/client";
import { HydrateClient } from "@/trpc/server";
import { AuthProvider } from "@/lib/provider";
import { ToastProvider } from "@/components/ui/toast";
import { getServerAuthSession } from "@/server/auth";
import { redirect } from "next/navigation";
import Header from "@/components/layout/header";
import Sidebar from "@/components/layout/sidebar";
import ProtectedLayout from "@/components/layout/protectedLayout";


const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function DashBoardLayout({ children }: Readonly<{ children: React.ReactNode; }>) {

    const session = await getServerAuthSession();

    if (!session) {
        redirect("/");
    }
    return (
        <html lang="en">
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased dark:text-text-dark`} suppressHydrationWarning={true}>
                <ToastProvider>
                    <TRPCProvider>
                        <HydrateClient>
                            <AuthProvider>
                                <ProtectedLayout>
                                    {children}
                                </ProtectedLayout>
                            </AuthProvider>
                        </HydrateClient>
                    </TRPCProvider>
                </ToastProvider>
            </body>
        </html>
    );
}
